// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PersonelTakip.Persistance;

namespace PersonelTakip.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190225114947_hesaplamalarDuzeltildi")]
    partial class hesaplamalarDuzeltildi
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasMaxLength(128);

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("PersonelTakip.Core.Models.Hesaplama", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Baslik")
                        .HasMaxLength(100);

                    b.Property<bool>("Disabled");

                    b.Property<bool>("OzetGoster");

                    b.Property<int>("SaymaLimiti");

                    b.Property<int>("UyariLimiti");

                    b.HasKey("Id");

                    b.ToTable("Hesaplamalar");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Baslik = "Çalışma Günü",
                            Disabled = false,
                            OzetGoster = false,
                            SaymaLimiti = 0,
                            UyariLimiti = 0
                        },
                        new
                        {
                            Id = 2L,
                            Baslik = "Hafta Tatili",
                            Disabled = false,
                            OzetGoster = false,
                            SaymaLimiti = 0,
                            UyariLimiti = 0
                        },
                        new
                        {
                            Id = 3L,
                            Baslik = "Resmi Tatil",
                            Disabled = false,
                            OzetGoster = true,
                            SaymaLimiti = 0,
                            UyariLimiti = 0
                        },
                        new
                        {
                            Id = 4L,
                            Baslik = "Yıllık İzin",
                            Disabled = false,
                            OzetGoster = false,
                            SaymaLimiti = 0,
                            UyariLimiti = 0
                        },
                        new
                        {
                            Id = 5L,
                            Baslik = "Ödenecek Rapor",
                            Disabled = false,
                            OzetGoster = false,
                            SaymaLimiti = 0,
                            UyariLimiti = 0
                        },
                        new
                        {
                            Id = 6L,
                            Baslik = "Doğum İzni",
                            Disabled = false,
                            OzetGoster = false,
                            SaymaLimiti = 0,
                            UyariLimiti = 0
                        },
                        new
                        {
                            Id = 7L,
                            Baslik = "Ölüm İzni",
                            Disabled = false,
                            OzetGoster = false,
                            SaymaLimiti = 0,
                            UyariLimiti = 0
                        },
                        new
                        {
                            Id = 8L,
                            Baslik = "Evlilik İzni",
                            Disabled = false,
                            OzetGoster = false,
                            SaymaLimiti = 0,
                            UyariLimiti = 0
                        },
                        new
                        {
                            Id = 9L,
                            Baslik = "Vardiya İzni",
                            Disabled = false,
                            OzetGoster = false,
                            SaymaLimiti = 0,
                            UyariLimiti = 0
                        },
                        new
                        {
                            Id = 10L,
                            Baslik = "Ödenmeyecek Rapor",
                            Disabled = false,
                            OzetGoster = false,
                            SaymaLimiti = 0,
                            UyariLimiti = 0
                        },
                        new
                        {
                            Id = 11L,
                            Baslik = "Ücretsiz İzin",
                            Disabled = false,
                            OzetGoster = false,
                            SaymaLimiti = 0,
                            UyariLimiti = 0
                        },
                        new
                        {
                            Id = 12L,
                            Baslik = "Devamsızlık",
                            Disabled = false,
                            OzetGoster = false,
                            SaymaLimiti = 0,
                            UyariLimiti = 0
                        },
                        new
                        {
                            Id = 13L,
                            Baslik = "Sigorta Gün",
                            Disabled = false,
                            OzetGoster = true,
                            SaymaLimiti = 30,
                            UyariLimiti = 0
                        },
                        new
                        {
                            Id = 14L,
                            Baslik = "Yemek Gün",
                            Disabled = false,
                            OzetGoster = true,
                            SaymaLimiti = 0,
                            UyariLimiti = 0
                        },
                        new
                        {
                            Id = 15L,
                            Baslik = "Yol Gün",
                            Disabled = false,
                            OzetGoster = true,
                            SaymaLimiti = 0,
                            UyariLimiti = 0
                        },
                        new
                        {
                            Id = 16L,
                            Baslik = "Sorumluluk Gün",
                            Disabled = false,
                            OzetGoster = true,
                            SaymaLimiti = 0,
                            UyariLimiti = 0
                        },
                        new
                        {
                            Id = 17L,
                            Baslik = "Gece Çalışma",
                            Disabled = false,
                            OzetGoster = true,
                            SaymaLimiti = 0,
                            UyariLimiti = 0
                        },
                        new
                        {
                            Id = 18L,
                            Baslik = "Saat Mesai",
                            Disabled = false,
                            OzetGoster = true,
                            SaymaLimiti = 0,
                            UyariLimiti = 0
                        },
                        new
                        {
                            Id = 19L,
                            Baslik = "Vizite",
                            Disabled = false,
                            OzetGoster = true,
                            SaymaLimiti = 0,
                            UyariLimiti = 0
                        },
                        new
                        {
                            Id = 20L,
                            Baslik = "İdari İzin",
                            Disabled = false,
                            OzetGoster = true,
                            SaymaLimiti = 0,
                            UyariLimiti = 0
                        },
                        new
                        {
                            Id = 21L,
                            Baslik = "Resmi Tatil Mesai",
                            Disabled = false,
                            OzetGoster = true,
                            SaymaLimiti = 0,
                            UyariLimiti = 0
                        });
                });

            modelBuilder.Entity("PersonelTakip.Core.Models.HesaplamaSecenegi", b =>
                {
                    b.Property<long>("HesaplamaId");

                    b.Property<long>("SecenekId");

                    b.Property<int>("Katsayi");

                    b.HasKey("HesaplamaId", "SecenekId");

                    b.HasIndex("SecenekId");

                    b.ToTable("HesaplamaSecenekleri");

                    b.HasData(
                        new
                        {
                            HesaplamaId = 1L,
                            SecenekId = 1L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 1L,
                            SecenekId = 2L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 1L,
                            SecenekId = 3L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 1L,
                            SecenekId = 4L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 1L,
                            SecenekId = 5L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 1L,
                            SecenekId = 19L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 2L,
                            SecenekId = 6L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 3L,
                            SecenekId = 14L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 4L,
                            SecenekId = 8L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 5L,
                            SecenekId = 11L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 6L,
                            SecenekId = 15L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 7L,
                            SecenekId = 17L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 8L,
                            SecenekId = 16L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 9L,
                            SecenekId = 18L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 10L,
                            SecenekId = 12L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 11L,
                            SecenekId = 10L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 12L,
                            SecenekId = 7L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 13L,
                            SecenekId = 1L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 13L,
                            SecenekId = 2L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 13L,
                            SecenekId = 3L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 13L,
                            SecenekId = 4L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 13L,
                            SecenekId = 5L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 13L,
                            SecenekId = 6L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 13L,
                            SecenekId = 8L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 13L,
                            SecenekId = 9L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 13L,
                            SecenekId = 11L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 13L,
                            SecenekId = 13L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 13L,
                            SecenekId = 14L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 13L,
                            SecenekId = 15L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 13L,
                            SecenekId = 16L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 13L,
                            SecenekId = 17L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 13L,
                            SecenekId = 18L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 13L,
                            SecenekId = 19L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 14L,
                            SecenekId = 1L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 14L,
                            SecenekId = 2L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 14L,
                            SecenekId = 3L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 14L,
                            SecenekId = 4L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 14L,
                            SecenekId = 5L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 14L,
                            SecenekId = 19L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 15L,
                            SecenekId = 1L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 15L,
                            SecenekId = 2L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 15L,
                            SecenekId = 3L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 15L,
                            SecenekId = 4L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 15L,
                            SecenekId = 5L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 15L,
                            SecenekId = 19L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 16L,
                            SecenekId = 1L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 16L,
                            SecenekId = 2L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 16L,
                            SecenekId = 3L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 16L,
                            SecenekId = 4L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 16L,
                            SecenekId = 5L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 16L,
                            SecenekId = 19L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 17L,
                            SecenekId = 5L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 17L,
                            SecenekId = 19L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 18L,
                            SecenekId = 2L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 18L,
                            SecenekId = 3L,
                            Katsayi = 2
                        },
                        new
                        {
                            HesaplamaId = 18L,
                            SecenekId = 4L,
                            Katsayi = 3
                        },
                        new
                        {
                            HesaplamaId = 19L,
                            SecenekId = 13L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 20L,
                            SecenekId = 9L,
                            Katsayi = 1
                        },
                        new
                        {
                            HesaplamaId = 21L,
                            SecenekId = 19L,
                            Katsayi = 1
                        });
                });

            modelBuilder.Entity("PersonelTakip.Core.Models.HesaplamaUnvani", b =>
                {
                    b.Property<long>("HesaplamaId");

                    b.Property<long>("UnvanId");

                    b.HasKey("HesaplamaId", "UnvanId");

                    b.HasIndex("UnvanId");

                    b.ToTable("HesaplamaUnvanlari");

                    b.HasData(
                        new
                        {
                            HesaplamaId = 16L,
                            UnvanId = 7L
                        },
                        new
                        {
                            HesaplamaId = 16L,
                            UnvanId = 10L
                        },
                        new
                        {
                            HesaplamaId = 16L,
                            UnvanId = 11L
                        });
                });

            modelBuilder.Entity("PersonelTakip.Core.Models.Personel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AdSoyad")
                        .HasMaxLength(100);

                    b.Property<string>("Adres")
                        .HasMaxLength(256);

                    b.Property<DateTime>("DogumTarihi");

                    b.Property<long>("GorevId");

                    b.Property<DateTime>("IseBaslamaTarihi");

                    b.Property<DateTime>("IstenAyrilmaTarihi");

                    b.Property<string>("KanGrubu")
                        .HasMaxLength(10);

                    b.Property<string>("SicilNo")
                        .HasMaxLength(7);

                    b.Property<string>("TcNo")
                        .HasMaxLength(11);

                    b.Property<string>("Telefon")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("GorevId");

                    b.ToTable("Personeller");
                });

            modelBuilder.Entity("PersonelTakip.Core.Models.PuantajGirdisi", b =>
                {
                    b.Property<long>("PersonelId");

                    b.Property<DateTime>("Tarih");

                    b.Property<long>("SecenekId");

                    b.HasKey("PersonelId", "Tarih");

                    b.HasIndex("SecenekId");

                    b.ToTable("Puantajlar");
                });

            modelBuilder.Entity("PersonelTakip.Core.Models.SecenekListesi", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Aciklama")
                        .HasMaxLength(256);

                    b.Property<string>("Deger")
                        .HasMaxLength(3);

                    b.Property<bool>("Disabled");

                    b.Property<string>("Renk")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Secenekler");

                    b.HasData(
                        new
                        {
                            Id = -1L,
                            Aciklama = "Boş Değer",
                            Deger = "",
                            Disabled = false,
                            Renk = "white"
                        },
                        new
                        {
                            Id = 1L,
                            Aciklama = "Normal Çalışma",
                            Deger = "X",
                            Disabled = false,
                            Renk = "indianred"
                        },
                        new
                        {
                            Id = 2L,
                            Aciklama = "Bir Saatlik Mesai",
                            Deger = "X1",
                            Disabled = false,
                            Renk = "lightsalmon"
                        },
                        new
                        {
                            Id = 3L,
                            Aciklama = "İki Saatlik Mesai",
                            Deger = "X2",
                            Disabled = false,
                            Renk = "darkorange"
                        },
                        new
                        {
                            Id = 4L,
                            Aciklama = "Üç Saatlik Mesai",
                            Deger = "X3",
                            Disabled = false,
                            Renk = "papayawhip"
                        },
                        new
                        {
                            Id = 5L,
                            Aciklama = "Gece Çalışması",
                            Deger = "Gx",
                            Disabled = false,
                            Renk = "palegoldenrod"
                        },
                        new
                        {
                            Id = 6L,
                            Aciklama = "Hafta Tatili",
                            Deger = "Ht",
                            Disabled = false,
                            Renk = "limegreen"
                        },
                        new
                        {
                            Id = 7L,
                            Aciklama = "Devamsızlık",
                            Deger = "D",
                            Disabled = false,
                            Renk = "lightcyan"
                        },
                        new
                        {
                            Id = 8L,
                            Aciklama = "Yıllık İzin",
                            Deger = "Yi",
                            Disabled = false,
                            Renk = "aquamarine"
                        },
                        new
                        {
                            Id = 9L,
                            Aciklama = "İdari İzin",
                            Deger = "İi",
                            Disabled = false,
                            Renk = "white"
                        },
                        new
                        {
                            Id = 10L,
                            Aciklama = "Ücretsiz İzin",
                            Deger = "Üi",
                            Disabled = false,
                            Renk = "white"
                        },
                        new
                        {
                            Id = 11L,
                            Aciklama = "Ödenecek Rapor",
                            Deger = "R+",
                            Disabled = false,
                            Renk = "blue"
                        },
                        new
                        {
                            Id = 12L,
                            Aciklama = "Ödenmeyecek Rapor",
                            Deger = "R-",
                            Disabled = false,
                            Renk = "skyblue"
                        },
                        new
                        {
                            Id = 13L,
                            Aciklama = "Vizite",
                            Deger = "V",
                            Disabled = false,
                            Renk = "slateblue"
                        },
                        new
                        {
                            Id = 14L,
                            Aciklama = "Resmi Tatil",
                            Deger = "Rt",
                            Disabled = false,
                            Renk = "thistle"
                        },
                        new
                        {
                            Id = 15L,
                            Aciklama = "Doğum İzni",
                            Deger = "Di",
                            Disabled = false,
                            Renk = "lavender"
                        },
                        new
                        {
                            Id = 16L,
                            Aciklama = "Evlilik İzni",
                            Deger = "Ei",
                            Disabled = false,
                            Renk = "hotpink"
                        },
                        new
                        {
                            Id = 17L,
                            Aciklama = "Ölüm İzni",
                            Deger = "Öi",
                            Disabled = false,
                            Renk = "floralwhite"
                        },
                        new
                        {
                            Id = 18L,
                            Aciklama = "Vardiya İzni",
                            Deger = "Vi",
                            Disabled = false,
                            Renk = "lavenderblush"
                        },
                        new
                        {
                            Id = 19L,
                            Aciklama = "Resmi Tatil Çalışma",
                            Deger = "Rc",
                            Disabled = false,
                            Renk = "tan"
                        });
                });

            modelBuilder.Entity("PersonelTakip.Core.Models.Unvan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Disabled");

                    b.Property<string>("UnvanAdi")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Unvanlar");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Disabled = false,
                            UnvanAdi = "Yönetici Amir"
                        },
                        new
                        {
                            Id = 2L,
                            Disabled = false,
                            UnvanAdi = "İlaçlama Yetkilisi"
                        },
                        new
                        {
                            Id = 3L,
                            Disabled = false,
                            UnvanAdi = "Bölge Şefi"
                        },
                        new
                        {
                            Id = 4L,
                            Disabled = false,
                            UnvanAdi = "Puantör"
                        },
                        new
                        {
                            Id = 5L,
                            Disabled = false,
                            UnvanAdi = "Araç Bakım Sorumlusu"
                        },
                        new
                        {
                            Id = 6L,
                            Disabled = false,
                            UnvanAdi = "Halkla İlişkiler Görevlisi"
                        },
                        new
                        {
                            Id = 7L,
                            Disabled = false,
                            UnvanAdi = "Operatör"
                        },
                        new
                        {
                            Id = 8L,
                            Disabled = false,
                            UnvanAdi = "İlaçlama Görevlisi"
                        },
                        new
                        {
                            Id = 9L,
                            Disabled = false,
                            UnvanAdi = "Vasıflı"
                        },
                        new
                        {
                            Id = 10L,
                            Disabled = false,
                            UnvanAdi = "Şoför"
                        },
                        new
                        {
                            Id = 11L,
                            Disabled = false,
                            UnvanAdi = "Otobüs Şoförü"
                        },
                        new
                        {
                            Id = 12L,
                            Disabled = false,
                            UnvanAdi = "Ağaç Dalı Ekibi"
                        },
                        new
                        {
                            Id = 13L,
                            Disabled = false,
                            UnvanAdi = "Yükleyici İşçi"
                        },
                        new
                        {
                            Id = 14L,
                            Disabled = false,
                            UnvanAdi = "Genel Amaçlı İşçi"
                        });
                });

            modelBuilder.Entity("PersonelTakip.Models.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("PersonelTakip.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("PersonelTakip.Models.ApplicationUserRole", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("PersonelTakip.Models.ApplicationRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("PersonelTakip.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("PersonelTakip.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("PersonelTakip.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PersonelTakip.Core.Models.HesaplamaSecenegi", b =>
                {
                    b.HasOne("PersonelTakip.Core.Models.Hesaplama", "Hesaplama")
                        .WithMany("HesaplamaSecenekleri")
                        .HasForeignKey("HesaplamaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PersonelTakip.Core.Models.SecenekListesi", "Secenek")
                        .WithMany()
                        .HasForeignKey("SecenekId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PersonelTakip.Core.Models.HesaplamaUnvani", b =>
                {
                    b.HasOne("PersonelTakip.Core.Models.Hesaplama", "Hesaplama")
                        .WithMany("HesaplamaUnvanlari")
                        .HasForeignKey("HesaplamaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PersonelTakip.Core.Models.Unvan", "Unvan")
                        .WithMany()
                        .HasForeignKey("UnvanId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PersonelTakip.Core.Models.Personel", b =>
                {
                    b.HasOne("PersonelTakip.Core.Models.Unvan", "Gorev")
                        .WithMany("Personeller")
                        .HasForeignKey("GorevId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PersonelTakip.Core.Models.PuantajGirdisi", b =>
                {
                    b.HasOne("PersonelTakip.Core.Models.Personel", "Personel")
                        .WithMany("PuantajGirdileri")
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PersonelTakip.Core.Models.SecenekListesi", "Secenek")
                        .WithMany()
                        .HasForeignKey("SecenekId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PersonelTakip.Models.ApplicationUserRole", b =>
                {
                    b.HasOne("PersonelTakip.Models.ApplicationRole", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PersonelTakip.Models.ApplicationUser", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
